import{z as p,C as s,ao as u,m as c,ap as b}from"../index.DXRZs43y.js";const A=p(void 0,"/"),w=void 0,h="oas";function S(){return u("quick")==="true"}const l=s&&S();function f(t){return g(l,t)}async function g(t,e){if(t){e.startsWith("/")&&!e.startsWith("/index.html")&&(e=`/index.html#${e}`);const{$browser:n}=c("BrowserService");l&&s?n.openTab(e):document.location.href=await n.getLaunchUrl(e)}else document.location.href=e}function x(t){t.target=s?"extn":"web";const e=`${b}/auth/${y(t.repoType)}/oauth?state=${btoa(JSON.stringify(t))}${s?"&authType=1":""}`;f(e),l&&window.close()}function y(t){switch(t){case"GitHubCloud":return"github";case"GitLabCloud":return"gitlab";default:return t}}function I(){const t=u("state");if(!t){window.close();return}m(t)}function m(t){sessionStorage.setItem(h,typeof t=="object"?btoa(JSON.stringify(t)):t);const e=typeof t=="string"?JSON.parse(atob(t)):t;O(e.repoType)}const $={GitHubCloud:`https://github.com/login/oauth/authorize?scope=user:email,read:user,repo,read:project,read:org&client_id=${w}`};function O(t){const e=$[t];e&&f(e)}async function C(){const t=u("code");if(!t){const{$message:r}=c("MessageService");console.log("Session token for oAuth not passed."),r.error("Unknown Behavior: oAuth Integration failed","Bad Request");return}const{$ajax:e,$session:n,$integration:i}=c("AjaxService","SessionService","IntegrationService"),{access_token:o}=await e.post(`${A}/api/github/token`,{token:t},{withCredentials:!1});if(!o||await v(o))return;const a=await i.add({addedDate:new Date,authType:"oAuth",name:"GitHub (oAuth)",type:"GitHubCloud",options:{authToken:o}});return n.setIntegration(a),`/${a.id}`}async function v(t){if(!t)return!1;let e=sessionStorage.getItem(h);if(e)sessionStorage.removeItem(h),e=JSON.parse(atob(e));else return!1;const{target:n,root:i,repoType:o,authType:a}=e??{};if(n&&i&&o&&a){e={root:i,repoType:o,authType:a,authToken:t};const r=n==="extn",d=`?oAuth=${btoa(JSON.stringify(e))}`;return await g(r,`${r?`/index.html${d}#`:""}/integrate${r?"":d}`),!0}return!1}function G(){const t=u("oAuth");if(t)try{return JSON.parse(atob(t))}catch(e){console.error("Error loading auth state",e)}}export{f as a,I as b,x as l,G as p,l as q,m as s,C as v};
